# Copyright 2018 the Deno authors. All rights reserved. MIT license.
import("//build_extra/rust/rust.gni")

if (is_win) {
  rust_crate("winapi") {
    source_root = "$rust_reg_github/winapi-0.3.5/src/lib.rs"
    features = [
      "basetsd",
      "cfg",
      "cfgmgr32",
      "errhandlingapi",
      "excpt",
      "fileapi",
      "guiddef",
      "handleapi",
      "inaddr",
      "in6addr",
      "ktmtypes",
      "libloaderapi",
      "lsalookup",
      "minwinbase",
      "minwindef",
      "mstcpip",
      "ntdef",
      "ntsecapi",
      "ntstatus",
      "processthreadsapi",
      "profileapi",
      "qos",
      "rpcndr",
      "sspi",
      "std",
      "subauth",
      "vadefs",
      "vcruntime",
      "winbase",
      "wincred",
      "windef",
      "winerror",
      "winnt",
      "winreg",
      "winsock2",
      "ws2def",
      "ws2ipdef",
      "ws2tcpip",
      "wtypes",
      "wtypesbase",
    ]
  }

  # Old version of the 'winapi' crate, required by 'mio', 'miow', and 'iovec'.
  # This exceptional! Generally we don't allow multiple versions of a crate.
  # TODO: Remove this dependency. https://github.com/denoland/deno/issues/484
  rust_crate("winapi-0.2") {
    crate_name = "winapi"
    crate_version = "0.2"
    source_root = "$rust_reg_github/winapi-0.2.8/src/lib.rs"
  }

  # TODO: Remove this crate together with crate 'winapi-0.2'.
  rust_crate("kernel32") {
    source_root = "$rust_reg_github/kernel32-sys-0.2.2/src/lib.rs"
    extern_version = [
      {
        label = ":winapi-0.2"
        crate_name = "winapi"
        crate_version = "0.2"
      },
    ]
  }

  # TODO: Remove this crate together with crate 'winapi-0.2'.
  rust_crate("ws2_32") {
    source_root = "$rust_reg_github/ws2_32-sys-0.2.1/src/lib.rs"
    extern_version = [
      {
        label = ":winapi-0.2"
        crate_name = "winapi"
        crate_version = "0.2"
      },
    ]
  }
}

